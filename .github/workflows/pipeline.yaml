name: Python Greetings CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - name: Deploying Python microservice to DEV environment...
        run: |
          docker pull ${{ secrets.DOCKERHUB_NAME }}/python-greetings-app:latest
          docker-compose -f ./docker-compose.yml stop greetings-app-dev
          docker-compose -f ./docker-compose.yml rm -f greetings-app-dev
          docker-compose -f ./docker-compose.yml up -d greetings-app-dev

  tests-on-dev:
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    steps:
      - name: Running tests on DEV environment...
        run: docker run --network=host --rm ${{ secrets.DOCKERHUB_NAME }}/api-tests:latest run greetings greetings_dev

  deploy-to-stg:
    runs-on: ubuntu-latest
    needs: tests-on-dev
    steps:
      - name: Deploying Python microservice to STG environment...
        run: |
          docker pull ${{ secrets.DOCKERHUB_NAME }}/python-greetings-app:latest
          docker-compose -f ./docker-compose.yml stop greetings-app-stg
          docker-compose -f ./docker-compose.yml rm -f greetings-app-stg
          docker-compose -f ./docker-compose.yml up -d greetings-app-stg

  tests-on-stg:
    runs-on: ubuntu-latest
    needs: deploy-to-stg
    steps:
      - name: Running tests on STG environment...
        run: docker run --network=host --rm ${{ secrets.DOCKERHUB_NAME }}/api-tests:latest run greetings greetings_stg

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: tests-on-stg
    steps:
      - name: Deploying Python microservice to PROD environment...
        run: |
          docker pull ${{ secrets.DOCKERHUB_NAME }}/python-greetings-app:latest
          docker-compose -f ./docker-compose.yml stop greetings-app-prod
          docker-compose -f ./docker-compose.yml rm -f greetings-app-prod
          docker-compose -f ./docker-compose.yml up -d greetings-app-prod

  tests-on-prod:
    runs-on: ubuntu-latest
    needs: deploy-to-prod
    steps:
      - name: Running tests on PROD environment...
        run: docker run --network=host --rm ${{ secrets.DOCKERHUB_NAME }}/api-tests:latest run greetings greetings_prod
